<?php

class SiteController extends Controller
{
    public $avatarPath = 'avtar';
    /**
     * Declares the default action for the convenient fallback
     * public $defaultAction = 'userlogin';
     */
    
	/**
	 * Declares class-based actions.
	 */
	public function actions()
	{
		return array(
			// captcha action renders the CAPTCHA image displayed on the contact page
			'captcha'=>array(
				'class'=>'CCaptchaAction',
				'backColor'=>0xFFFFFF,
			),
			// page action renders "static" pages stored under 'protected/views/site/pages'
			// They can be accessed via: index.php?r=site/page&view=FileName
			'page'=>array(
				'class'=>'CViewAction',
                                'layout' => 'static'
			),
		);
	}

	/**
	 * This is the default 'index' action that is invoked
	 * when an action is not explicitly requested by users.
	 */
	public function actionIndex()
	{
		// renders the view file 'protected/views/site/index.php'
		// using the default layout 'protected/views/layouts/main.php'
		$this->render('index');
	}
        public function actionSubscribe()
	{
            $model=new Subsribers;
            if(isset($_POST['ajax']) && $_POST['ajax']==='subscription-form')
		{
			$errors = CActiveForm::validate($model);
			if ($errors != '[]')
                            {
                                echo $errors;
                                Yii::app()->end();
                            }
		}
           /* if(isset($_POST['ajax']) && $_POST['ajax']==='subscription-form')
		{
			echo CActiveForm::validate($model);
			Yii::app()->end();
		}*/
            if(isset($_POST['Subsribers']))
		{ 
                $model->attributes=$_POST['Subsribers'];
                $valid = $model->validate();
                if($valid){
                    $user  = Users::model()->findByAttributes(array('email'=>$model->email));
                    if($user){
                        $model->setAttribute('user_registered', 1);
                    }else{
                        $model->setAttribute('user_registered', 0);
                    }
                    $model->save(false);
                    Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_SUCCESS,'<strong>Thank you for Subscribe us.You can unsubscribe at any time.</strong>');
                $this->redirect(Yii::app()->request->urlReferrer);
                    }	
		}
		// renders the view file 'protected/views/site/index.php'
		// using the default layout 'protected/views/layouts/main.php'
		$this->redirect(Yii::app()->request->urlReferrer);
	}
	/**
	 * This is the action to handle external exceptions.
	 */
	public function actionError()
	{
            $this->layout = "error";
		if($error=Yii::app()->errorHandler->error)
		{
                    $this->layout = "error";
			if(Yii::app()->request->isAjaxRequest)
				echo $error['message'];
			else
				$this->render('error', $error);
		}
	}

	/**
	 * Displays the contact page
	 */
	public function actionContact()
	{
            $this->layout='static';
		$model=new ContactForm;
		if(isset($_POST['ContactForm']))
		{
			$model->attributes=$_POST['ContactForm'];
			if($model->validate())
			{
                            $model_emailtemplate = Emailtemplate::model()->findByPk(1);
				$body	=	$model_emailtemplate->body;
				$body	=	str_replace('$user', 'Admin', $body);
				$create_body	=	'<div>A new query is generated by '.$model->name.'</div>
							<br />
							<br />
                                                        <div>Phone: '.$model->telephone.'</div>
							<br />
                                                        <div>Email: '.$model->email.'</div>
							<div>Message:'.$model->body.'</div>';
					$body	=	str_replace('$body', $create_body, $body);
                                        $body	=	str_replace('$site', 'Team Gympik', $body);
                                                $message = new YiiMailMessage;
						$message->setBody($body, 'text/html');
						$message->subject = 'Contact Us';
						$message->to = 'ajay.pandey@gympik.com';
						$message->from = 'contact@gympik.com';
                                                if(Yii::app()->mail->send($message)){
						Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_SUCCESS,'<strong>Thank you for contacting us. We will respond to you as soon as possible.</strong>');
                                                }else{
                                                   Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_ERROR,'<strong>Oh! Some error occured.Please try again</strong>'); 
                                                }
                                                $this->refresh();
			}
		}
		$this->render('contact',array('model'=>$model));
	}
        /**
	 * Displays the careers page
	 */
	public function actionCareers()
	{
            $this->layout='static';
		
		
		$this->render('pages/careers'
//                        array('model'=>$model)
                        );
	}
        /**
	 * Displays the How it works page page
	 */
	public function actionhow()
	{
            $this->layout='how_it_works';
		
		
		$this->render('pages/how'
//                        array('model'=>$model)
                        );
	}
        /**
	 * Displays the Success page
	 */
	public function actionSuccess()
	{
            $this->layout='static';
		
		
		$this->render('success'
//                        array('model'=>$model)
                        );
	}
        /**
	 * Displays the Advertise page with mail submission of user query
	 */
	public function actionAdvertise()
	{
            $this->layout='static';
		$model = new Advertise;
		if(isset($_POST['Advertise']))
		{
			$model->attributes=$_POST['Advertise'];
			if($model->validate())
			{
                            $model_emailtemplate = Emailtemplate::model()->findByPk(1);
				$body	=	$model_emailtemplate->body;
				$body	=	str_replace('$user', 'Admin', $body);
				$create_body	=	'<div>A new query is generated by '.$model->fname.' '.$model->lname.'</div>
							<br />
							<br />
                                                        <div>Phone: '.$model->telephone.'</div>
							<br />
                                                        <div>Mobile: '.$model->mobile.'</div>
							<br />
                                                        <div>Company: '.$model->company.'</div>
							<br />
                                                        <div>Website: '.$model->website.'</div>
							<br />
                                                        <div>Email: '.$model->email.'</div>
							<div>Comment:'.$model->comment.'</div>';
					$body	=	str_replace('$body', $create_body, $body);
                                        $body	=	str_replace('$site', 'Team Gympik', $body);
                                                $message = new YiiMailMessage;
						$message->setBody($body, 'text/html');
						$message->subject = 'Advertise Us Query Generated';
						$message->to = 'ajay.pandey@gympik.com';
						$message->from = 'contact@gympik.com';
                                                if(Yii::app()->mail->send($message)){
						Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_SUCCESS,'<strong>Thanks for your interest. We will get back to you as soon as possible.</strong>');
                                                }else{
                                                   Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_ERROR,'<strong>Oh! Some error occured.Please try again</strong>'); 
                                                }
                                                $this->refresh();
			}
		}
		$this->render('advertise', array('model'=>$model));
	}
        /**
	 * Displays the About page
	 */
	public function actionAbout()
	{
            $this->layout='about';
		$contact = new ContactForm;
//                if(Yii::app()->user->isUser())
                   
		$this->render('about',
                        array('contact'=>$contact)
                        );
	}
        /**
	 * Displays the Trainers page
	 */
	public function actionTrainers()
	{
            $this->layout='static';
            

		$this->render('trainersstatic'
//                        array('model'=>$model)
                        );
	}
         /**
	 * Displays the Terms of user page
	 */
	public function actionTerms()
	{
            $this->layout='static';
		
		
		$this->render('pages/terms'
//                        array('model'=>$model)
                        );
	}
        /**
	 * Displays the Privacy Policy page
	 */
	public function actionPrivacy()
	{
            $this->layout='static';
		
		
		$this->render('pages/privacy'
//                        array('model'=>$model)
                        );
	}
        /**
	 * Displays the FAQ page
	 */
	public function actionfaq()
	{
            $this->layout='static';
		$model = GpFaq::model()->findAllByAttributes(array('status'=>1));
		
		$this->render('faq',
                        array('model'=>$model)
                        );
	}
        /**
	 * Displays the Why Gympik page
	 */
	public function actionWhy()
	{
            $this->layout='static';
		
		
		$this->render('pages/why'
//                        array('model'=>$model)
                        );
	}
        
	/**
	 * Displays the Calculators page
	 */
        
        public function actionCalculator()
    {
        $this->layout = 'static';
        $this->render('calculator');
    }
        /**
	 * Displays the login page
	 */
	public function actionLogin()
	{
		$model=new LoginForm;

		// if it is ajax validation request
		if(isset($_POST['ajax']) && $_POST['ajax']==='login-form')
		{
			echo CActiveForm::validate($model);
			Yii::app()->end();
		}

		// collect user input data
		if(isset($_POST['LoginForm']))
		{
			$model->attributes=$_POST['LoginForm'];
			// validate user input and redirect to the previous page if valid
			if($model->validate() && $model->login())
                            Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_SUCCESS,
                                                                             '<strong>Well done!</strong> You successfully registered.');
			$this->redirect(array('site/index'));
                        $this->redirect(Yii::app()->user->returnUrl);
		}
                $this->redirect(array('site/index'));
		// display the login form
		$this->render('login',array('model'=>$model));
	}

	/**
	 * Logs out the current user and redirect to homepage.
	 */
	public function actionLogout()
	{
		Yii::app()->user->logout();
		$this->redirect(Yii::app()->homeUrl);
	}
         /**
         * Forgot password Functions
         */
        public function actionForgotpass()
	{
            
		$this->layout = 'main';
		$model=new Forgotpass;
		
		
                //$this->performAjaxValidation($model);
		
		if(isset($_POST['Forgotpass']))
		{  
                  
			$model->attributes=$_POST['Forgotpass'];
			if($model->validate()){
				$email = $_POST['Forgotpass']['email'];
                                
				$record=Users::model()->findByAttributes(array('email'=>$email,'status'=>1));
                                if($record==null)
				{
					$model->addError('email','Invalid email address or your account is deactivated.');
                                       // $this->render('forgotpass',array('model'=>$model));
				}
				else
				{
					//echo '<pre>'; print_r($record->password);die;
					$password 		= $this->createPwdString();
					$model_emailtemplate	= Emailtemplate::model()->findByPk(1);
					$body			=	$model_emailtemplate->body;
					$body			=	str_replace('$user', $record->username, $body);
					$create_body		=	'<div>We have reset your password as per your request.</div>
													<br />
													<br />

													<div>Your new password is: '.$password.'</div>
													<br />
													<br />
													<div>For any further assistance, please reply to this email or call us at care@gympik.com</div>';
					$body						=	str_replace('$body', $create_body, $body);
					$body						=	str_replace('$site', 'Team Gympik', $body);
					$record->password = md5($password);
                                       if($record->save(false)){
						$message = new YiiMailMessage;
						$message->setBody($body, 'text/html');
						$message->subject = 'Forgot Password?';
						$message->to = $record->email;
						$message->from = 'contact@gympik.com';
						Yii::app()->mail->send($message);
						Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_SUCCESS,'<strong>An email has been sent to you with your password.');
						$this->redirect(array('site/index'));
					}
					//Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_ERROR,'<strong>Argggg...!</strong> Something went wrong.Please try again!');
						$this->redirect(array('site/index'));
					
				}
				
				//$this->redirect(array('view','id'=>$model->id));
                                $this->redirect('index');
			}
		}
		
		
	}
        /**
	 * Logs out the current user and redirect to homepage.
	 */
	public function actionuserLogin()
	{
            $this->layout ='main';
                $model=new LoginForm;
                    
                    // if it is ajax validation request
		if(isset($_POST['ajax']) && $_POST['ajax']==='login-form')
		{
			$errors = CActiveForm::validate($model);
			if ($errors != '[]')
                            {
                                echo $errors;
                                Yii::app()->end();
                            }
		}
                // collect user input data
		if(isset($_POST['LoginForm']))
		{
			$model->attributes=$_POST['LoginForm'];

			// validate user input and redirect to the previous page if valid
			if ($model->validate() && $model->login()) {
                                    if (isset($_POST['ajax']) && $_POST['ajax'] === 'login-form') {
                                        $user_id = Yii::app()->user->id;
                                        $arr = array();
                                        
                                        $record = Users::model()->findByPk($user_id);
                                       
                                        $details = TrainerDetails::model()->findByAttributes(array('user_id'=>$record->id));
                                        if ($record->masrole->name == 'Trainer') {
                                            
                                            Users::model()->updateByPk($user_id, array('log' => 1));
                                                    if ($record->log == 1) {
                                                        foreach ($details->attributes as $k=>$v)
                                                            {
                                                              if (isset($k))
                                                              {
                                                              $arr[] = $v;
                                                              }
                                                            }
                                                            $counter = count(array_filter($arr));
                                                           
                                                            if($counter < 26){
                                                                echo CJSON::encode(array(
                                                            'authenticated' => true,
                                                            'redirectUrl' => CController::createUrl('users/trainerprofile'),
                                                            "id" => $record->id,
                                                                ));
                                                             Yii::app()->end();
                                                            }
                                                        echo CJSON::encode(array(
                                                            'authenticated' => true,
                                                            'redirectUrl' => CController::createUrl('users/traindashboard',array('id'=>$record->id)),
                                                            "id" => $record->id,
                                                                ));
                                                         Yii::app()->end();
                                                        
                                                        } else {
                                                            echo CJSON::encode(array(
                                                            'authenticated' => true,
                                                            'redirectUrl' => CController::createUrl('users/trainerprofile'),
                                                            "id" => $record->id,
                                                                ));
                                                             Yii::app()->end();
                                                            
                                                }}
                                        if ($record->masrole->name == 'User') {
                                            Users::model()->updateByPk($user_id, array('log' => 1));
                                            $userdetails = UserDetails::model()->findByAttributes(array('user_id'=>$record->id));
                                             if ($record->log == 1) {
                                                 foreach ($userdetails->attributes as $k=>$v)
                                                            {
                                                              if (isset($k))
                                                              {
                                                              $arr[] = $v;
                                                              }
                                                            }
                                                            $counter1 = count(array_filter($arr));
                                                 $action = Yii::app()->controller->getAction()->getId();
                                                 $segments = explode('/',Yii::app()->request->urlReferrer);
                                                 if (end($segments) == 'search')
                                                     {
                                                    
                                                    echo CJSON::encode(array(
                                                                'authenticated' => true,
                                                                'redirectUrl' => Yii::app()->request->urlReferrer,
                                                                "id" => $record->id,
                                                                    ));
                                                                 Yii::app()->end();
                                                      }
                                                      if($counter1 < 16){
                                                                echo CJSON::encode(array(
                                                            'authenticated' => true,
                                                            'redirectUrl' => CController::createUrl('users/firstprofile'),
                                                            "id" => $record->id,
                                                                ));
                                                             Yii::app()->end();
                                                            }
                                                        echo CJSON::encode(array(
                                                            'authenticated' => true,
                                                            'redirectUrl' => CController::createUrl('users/userdashboard'),
                                                            "id" => $record->id,
                                                                ));
                                                             Yii::app()->end();
                                                        
                                                        } else {
                                                           
                                                             echo CJSON::encode(array(
                                                            'authenticated' => true,
                                                            'redirectUrl' => CController::createUrl('users/firstprofile'),
                                                            "id" => $record->id,
                                                                ));
                                                             Yii::app()->end();
                                                            
                                                }}
                                        if ($record->masrole->name == 'Admin') {
                                                    
                                                     echo CJSON::encode(array(
                                                                'authenticated' => true,
                                                                'redirectUrl' => CController::createUrl('admin/admin'),
                                                                "id" => $record->id,
                                                                    ));
                                                                 Yii::app()->end();
                                                            }
                                                        
                                                    }
                                              }
                                            
                                        }
                                        $this->render('index');
                                    }
                                    
                 
       /**
	 *Create random string for activation key
	 * 
	 */
	private function createRandomString() {
		$chars = "abcdefghijkmnopqrstuvwxyz023456789";
		srand((double)microtime()*1000000);
		$i = 0;
		$pass = '' ;
		while ($i <= 19)
		{
		    $num = rand() % 33;
		    $tmp = substr($chars, $num, 1);
		    $pass = $pass . $tmp;
		    $i++;
		}
		return $pass;
        }
        /**
	 *Create random string for activation key
	 * 
	 */
	private function createPwdString() {
		$chars = "abcdefghijkmnopqrstuvwxyz0123456789_!@#$%+";
		srand((double)microtime()*1000000);
		$i = 0;
		$pass = '' ;
		while ($i <= 5)
		{
		    $num = rand() % 33;
		    $tmp = substr($chars, $num, 1);
		    $pass = $pass . $tmp;
		    $i++;
		}
		return $pass;
        }
        /**
         * User Activation Code
         */
        public function actionActivate(){
		$ackkey = $_REQUEST['act_key'];
		$user = Users::model()->findByAttributes(array('activation_key'=>$ackkey));
		
		if($user == null){
			throw new CHttpException(404,'You are not authorize to acess this page.');
		}else{
                        $user->status = 1;
			$user->activation_key = 0;
                        if($user->save(false)){
                            if($user->mas_role_id == 2){
                               $trainerdetails = TrainerDetails::model()->findByAttributes(array('user_id'=>$user->id));
//                                    if($trainerdetails->updateByPk($trainerdetails->id, array('status'=>1))){
//                                             Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_SUCCESS,'<strong>Congratulations!</strong> Your account is active.Please login via sign-in.
//                                                    <a href="#" class="" data-dismiss="alert" type="button"><div class="cp-f"><button class="btn btn-primary" type="button">OK</button></div>');
                                           Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_SUCCESS,'<strong>Congratulations!</strong> Your account is active.Please login via sign-in.');
//                                            $this->redirect(array('Users/trainerprofile','id'=>$user->id));
//                                            Yii::app()->end();
//                                          } 
                                            $this->redirect(array('site/index')); 
                                        }
                         if($user->mas_role_id == 3){
                                $userdetails = UserDetails::model()->findByAttributes(array('user_id'=>$user->id));
                                if($userdetails->updateByPk($userdetails->id, array('status'=>1))){
                                        Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_SUCCESS,'<strong>Congratulations!</strong> Your account is active.Please login via sign-in.');
//                                          $this->redirect(array('users/firstprofile','id'=>$user->id));
//                                        Yii::app()->end();
                                        $this->redirect(array('site/index')); 
                                        }
                                    }
                        }
            }
            Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_ERROR,'<strong>Oh Snap!</strong> An Error occured.');
             $this->redirect(array('Site/index'));
        }
         /**
         * User Fblogin
         */
        public function actionFblogin(){
            $token = $_POST['data'];
            $code = $this->createRandomString();
            $segments = explode('/',Yii::app()->request->urlReferrer);
            $results = Yii::app()->facebook->api('/me') ;
            $object = json_decode(json_encode($results), FALSE);
                if (empty($results)) {
                        throw new CHttpException(500, 'Internal Server Error!');
                }else{
                    $record = Users::model()->findByAttributes(array('fb_id'=>$object->id));
                    if($record){
                        $record->fblogin($record->id,$token);
                        $user_id = Yii::app()->user->id;
                        
                        $userdetails = UserDetails::model()->findByAttributes(array('user_id'=>$record->id));
                         Users::model()->updateByPk($user_id, array('log'=>1));
					if($record->log == 0){
                                                //Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_SUCCESS,'<strong>Well done!</strong> You successfully Login.');
                                            $this->redirect(array('users/firstprofile','id'=>$record->id));
                                        }
                                        if ($record->log == 1) {
                                                 foreach ($userdetails->attributes as $k=>$v)
                                                            {
                                                              if (isset($k))
                                                              {
                                                              $arr[] = $v;
                                                              }
                                                            }
                                                 $counter1 = count(array_filter($arr));
//                                                 $action = Yii::app()->controller->getAction()->getId();
                                                      if($counter1 < 16){
                                                               $this->redirect(array('users/firstprofile','id'=>$record->id));
                                                            }
                                                if (end($segments) == 'search') {
                                                     $this->redirect(Yii::app()->request->urlReferrer);
                                                        }
                                             }
                                        
                         $this->redirect(array('users/userdashboard','id'=>$record->id));
                       }else{
//                           $transaction = Yii::app()->db->beginTransaction();
                                $model=new Users;
				$model->attributes = $object;
                                $model->username =  $object->username;
                                $model->email = $object->email;
                                $model->fb_id = $object->id;
				$password = $this->createPwdString();
				$model->password = md5($password);
				$userrole = Masroles::model()->findByAttributes(array('name'=>'User'));
				$model->mas_role_id = $userrole->id;
				$model->activation_key = 0;
				$model->status = 1;
				$model->trainer_id = 0;
                                $model->featured = 0;
                                
                                
                        if($model->save(false)){
                            $details = new UserDetails;
                            $img = file_get_contents('https://graph.facebook.com/'.$object->id.'/picture?type=large');
                            $details->fname= $object->first_name;
                            $details->lname= $object->last_name;
                            $details->user_id = $model->id;
                            $details->description = $object->bio;
                            $details->gender = $object->gender == 'male' ? '1':'0';
//                            $file = 'avtar/'.$object->id.'.jpg';
                             $file = $object->id.'.jpg';
                           
                            $details->avtar = $file;
                            if ($details->save(false)) {
                                 file_put_contents($file, $img);
                                /**
                                 * Code for sending welcome Mail 
                                 */
                                $model_emailtemplate	=	Emailtemplate::model()->findByPk(3);
									$body		=	$model_emailtemplate->body;
									$register_body	=	$body;
									$register_body	=	str_replace('$name', $details->fname.' '.$details->lname, $register_body);
                                                                        $register_body	=	str_replace('$username', $model->email, $register_body);
                                                                        $register_body	=	str_replace('$password', $password, $register_body);
                                                                        $message = new YiiMailMessage;
									$message->setBody($register_body, 'text/html');
									$message->subject = 'Welcome to Gympik';
									$message->to = $object->email;//'sudhanshu.s@rijitechsolutions.com';
									$message->from = 'contact@gympik.com';//Yii::app()->user->adminEmail();
                                                                        if(Yii::app()->mail->send($message)){
                                                                             Yii::app()->user->setFlash('success', "Account Created Successfully!.");
                                                                                    $this->redirect(Yii::app()->user->returnUrl);
                                                                                    }else{
                                                                                        Yii::app()->user->setFlash('error', "Username Or Email already exist!.");
                                                                                         $this->redirect(Yii::app()->user->returnUrl);
                                                                                    }
                                                                                    Yii::app()->user->setFlash('success', "Account Created Successfully!.");echo'not mailed';
                                                                                        $this->redirect(Yii::app()->user->returnUrl);
                                                                            
                                        
                            }
                        }
                        $this->redirect(array('users/firstprofile','id'=>$model->id));
                    }
                   
                     $this->redirect(array('users/firstprofile','id'=>$model->id));
               }
                
        }
        /**
         * Update the state drop-down dynamically on change of city in user profile form
         */
        public function actionDynamicstates(){
            if(isset($_POST['UserDetails']['city_id'])){
            $city_id = $_POST['UserDetails']['city_id'];
            $data=  Citylist::model()->findByAttributes(array('city_id'=>$city_id));
            echo   $data->state;
            }
            if(isset($_POST['TrainerDetails']['city_id'])){
            $city_id = $_POST['TrainerDetails']['city_id'];
            $data =  Citylist::model()->findByAttributes(array('city_id'=>$city_id));
            echo   $data->state;
            }
            
        }
        /**
         * Update the state drop-down dynamically on change of city in user profile form
         */
        public function actionTrainDynamicstates(){
            if(isset($_POST['city_id'])){
            $city_id = $_POST['city_id'];
            $data=  Citylist::model()->findByAttributes(array('city_id'=>$city_id));
            echo   $data->state;
            }else {echo 'Other';}
        }
        /**
         * List generated by dropdown of workout type items.
         * @return string list of workout data
         */
        
         public function actionWorkouts(){
          $id = $_POST['workid'];
          $models = Workouts::model()->findAllByAttributes(array('worktype_id'=>$id));
          
          
           if($models){
                    $out = array();
                    foreach($models as $model){
                     /*$out[] = array(
				'label' => $model->name,  
				'value' => $model->name,
				'id' => $model->id,
                                'intensity'=>$model->intensity,
				'final_result'=>'true'
			    );*/
                        $content .= '<li><a href="#" worktype="'.$model->worktype->type.'" exercise="'.$model->id.'" typeid="'.$model->worktype_id.'" class="workitem" id="workitem_'.$model->id.'">'.$model->name.'</li>';
                       }
                       
                     echo $content;
                     }
                        
			Yii::app()->end();
            }
            /**
             * List generated by Workout auto complete return Json Object
             */
            public function actionWorking(){
           $q = $_GET['term'];
                $id = Yii::app()->user->id;
		if (isset($q)) {
		    $criteria = new CDbCriteria;
                    $criteria->condition='status = 1 AND name LIKE "%'.trim($q).'%"';
                    $criteria->distinct = true;
                    $criteria->group = 'name';
		    $criteria->limit = 10;
		    $services = Workouts::model()->findAll($criteria);
                    
		    if (!empty($services)) {
			$out = array();
			foreach ($services as $c) {
			    $out[] = array(
				'label' => $c->name,  
				'value' => $c->name,
				'id' => $c->id,
                                'typeid'=>$c->worktype_id,
                                'exercise_id'=>$c->worktype->type,
                               
			    );
			}
			echo CJSON::encode($out);
			Yii::app()->end();
		    }
		}
        }
        /**
         * List generated by auto complete return Json Object
         * @return array json object
         */
        public function actionFoddies(){
           $q = $_GET['term'];
                $id = Yii::app()->user->id;
		if (isset($q)) {
		    $criteria = new CDbCriteria;
                    $criteria->condition='status = 1 AND item LIKE "%'.trim($q).'%"';
                    $criteria->distinct = true;
                    $criteria->group = 'item';
		    $criteria->limit = 10;
		    $services = FoodItems::model()->findAll($criteria);
                    
		    if (!empty($services)) {
			$out = array();
			foreach ($services as $c) {
			    $out[] = array(
				'label' => $c->item,  
				'value' => $c->item,
				'id' => $c->id,
                                'typeid'=>$c->food_typeid,
                               
			    );
			}
			echo CJSON::encode($out);
			Yii::app()->end();
		    }
		}
        }
        /**
         * List generated by dropdown of food items.
         * @return string list of food data
         */
        public function actionFooditems(){
          $id = $_POST['foodid'];
          $models = FoodItems::model()->findAllByAttributes(array('food_typeid'=>$id));
           if($models){
                    $out = array();
                    foreach($models as $model){
                        $content .= '<li><a href="#" food="'.$model->id.'" foodtypeid="'.$model->food_typeid.'" class="fooditem" id="fooditem_'.$model->id.'">'.$model->item.'</li>';
                       }
                     echo $content;
                     }
                        
			Yii::app()->end();
            }
        public function actionDynamicStreet()
                {
                    if(isset($_POST['city_id'])){
                   $city_id = $_POST['city_id'];
                   if($city_id == 999999){
                       echo CHtml::tag('option',
                          array('value'=>'99999'),CHtml::encode('other'),true);
                   }
                   $data = Locality::model()->findAllByAttributes(array('city_id'=>$city_id));
                   $data=CHtml::listData($data,'id','locality');
                   foreach($data as $value=>$locality)  {
                       echo CHtml::tag('option',
                          array('value'=>$value),CHtml::encode($locality),true);
                       }

                   }
                    if(isset($_POST['TrainerDetails']['city_id'])){
                        $city_id = $_POST['TrainerDetails']['city_id'];
                        $data = Locality::model()->findAllByAttributes(array('city_id'=>$city_id));
                     $data=CHtml::listData($data,'id','locality');
                    foreach($data as $value=>$locality)  {
                        echo CHtml::tag('option',
                           array('value'=>$value),CHtml::encode($locality),true);
                        }
                
                    }
                    if(isset($_POST['UserDetails']['city_id'])){
                    $city_id = $_POST['UserDetails']['city_id'];
                        $data = Locality::model()->findAllByAttributes(array('city_id'=>$city_id));
                     $data=CHtml::listData($data,'id','locality');
                    foreach($data as $value=>$locality)  {
                        echo CHtml::tag('option',
                           array('value'=>$value),CHtml::encode($locality),true);
                        }
                        Yii::app()->end();
                    }
        }
        public function actionSearch(){
            $this->layout ='search';
            
            if($_POST)
		{
                   
			$type = $_POST['search_type_id'];
			$gender = $_POST['gender'];
                        $street = $_POST['street'];
                        $city = $_POST['city_id'];
                        Yii::app()->session['city'] = $_POST['city_id'];
                        Yii::app()->session['street'] = $_POST['street'];
                        Yii::app()->session['gender'] = $_POST['gender'];
                        Yii::app()->session['type_id'] = $_POST['search_type_id'];
                        $model = new TrainerDetails;
                        $this->render('search', array('model'=>$model,'city'=>$city));
		}
		else
		{
//                        Yii::app()->session['city'] = $_POST['city_id'];
                    
                        $cityy= Yii::app()->session['city'];
			$model = new TrainerDetails;
			$this->render('search', array('model'=>$model,'city'=>$cityy));
		}
        }
         public function actionSearchtrainer(){
            $this->layout ='search';
            if($_GET)
		{
                   
			$type = $_GET['type_id'];
			$gender = $_POST['gender'];
                        $street = $_POST['street'];
                        $city = $_GET['city_id'];
                        Yii::app()->session['city'] = $_GET['city'];
                        Yii::app()->session['street'] = $_POST['street'];
                        Yii::app()->session['gender'] = $_POST['gender'];
                        Yii::app()->session['type_id'] = $_GET['type'];
                        $model = new TrainerDetails;
                        
			$this->render('search', array('model'=>$model,'city'=>$city));
		}
		else
		{
                    Yii::app()->session['city'] = $_POST['city_id'];
                    
                        $cityy= Yii::app()->session['city'];
			$model = new TrainerDetails;
			$this->render('search', array('model'=>$model,'city'=>$cityy));
		}
        }
        public function actionHealthguide(){
            $this->layout = 'static';
            $model = new Guide('search');
            $model->unsetAttributes();  // clear any default values
            $this->render('healthguide',array('model'=>$model));
        }
        public function actionGuide($id){
            $this->layout = 'static';
            $model = new Guide('search');
            $model->unsetAttributes();  // clear any default values
            $this->render('guide',array('model'=>$model));
        }
        /**
         * Site Map View based on XML map in the root folder
         */
        public function actionSitemap(){
            $this->layout = 'static';
            $arr = simplexml_load_file('sitemap.xml');
            $this->render('sitemap',array('model'=>$arr));
        }
        public function actionlocalitytype()
	{
            $res =array();

	if (isset($_GET['term'])) {
		
//		$qtxt ="SELECT locality FROM gp_locality WHERE locality LIKE :street";
//		$command =Yii::app()->db->createCommand($qtxt);
//		$command->bindValue(":street", '%'.$_GET['term'].'%', PDO::PARAM_STR);
//		$res =$command->queryColumn();
            $criteria = new CDbCriteria;
            $criteria->compare('locality',$_GET['term'],true);
            $criteria->compare('city_id',$_GET['type']);
            $criteria->limit = 5;
//
                $data = Locality::model()->findAll($criteria);
               foreach ($data as $locality){
//                   $out[] = $locality->locality;
                    $out[] = array(
                                'label' => $locality->locality,
				'id' => $locality->id,
				'name' => $locality->locality,
                                );
               }
               if($out){
              echo CJSON::encode($out);
               }else{
                   $out[] = array(
                                'label' => 'other',
				'id' => '999999',
				'name' => 'other',
                                );
                   echo CJSON::encode($out);
               }
	}
//echo CJSON::encode($res);
//            
			Yii::app()->end();
	}
         public function actionlocalitytypenull()
	{
            $res =array();

	if (isset($_GET['type'])) {
            $criteria = new CDbCriteria;
//            $criteria->compare('locality',$_GET['term'],true);
            $criteria->compare('city_id',$_GET['type']);
            $criteria->limit = 5;
//
                $data = Locality::model()->findAll($criteria);
               foreach ($data as $locality){
//                   $out[] = $locality->locality;
                    $out[] = array(
                                'label' => $locality->locality,
				'id' => $locality->id,
				'name' => $locality->locality,
                                );
               }
               if($out){
              echo CJSON::encode($out);
               }
	}
//echo CJSON::encode($res);
//            
			Yii::app()->end();
	}
        public function actionCombobox(){
           $varr = Citylist::model()->getComboCityuserDropDown();
           
            $out = array();
             $object = json_decode(json_encode($varr), FALSE);
              
           foreach($object as $key=>$city){
            $key =   str_replace('"', '', $key);
              $out[$key].=  $city;
                                
               }
               $json = json_encode($out);
                echo $json ;

               
           }
        


        protected function beforeAction($action)
	{
           $actionToRun = $action->getId(); 
           if($actionToRun == 'logout'){
               Yii::app()->user->logout();
               $this->redirect(Yii::app()->user->returnUrl);
           }
           if(false !== strpos(Yii::app()->request->urlReferrer ,'userdashboard') || false !== strpos(Yii::app()->request->urlReferrer ,'traindashboard')){
            	if(Yii::app()->user->isUser() || Yii::app()->user->isTrainer()){
                            if($actionToRun == 'search'){
                                             Yii::app()->user->setFlash('success',null); 
                                             
                            }else if($actionToRun == 'searchtrainer'){
                                Yii::app()->user->setFlash('success',null); 
                            }else
                                {
                                
                        Yii::app()->user->setFlash(TbHtml::ALERT_COLOR_SUCCESS,'<strong>You can go to your dashboard by clicking on Gympik logo.</strong>
                            <a href="#" class="" data-dismiss="alert" type="button"><div class="cp-f"><button class="btn btn-primary" type="button">OK</button></div>');
                            /*$record = Users::model()->findByPk(Yii::app()->user->id);
                            $userdetails = UserDetails::model()->findByAttributes(array('user_id'=>$record->id));
                                             if ($record->log == 1) {
                                                 foreach ($userdetails->attributes as $k=>$v)
                                                            {
                                                              if (isset($k))
                                                              {
                                                              $arr[] = $v;
                                                              }
                                                            }
                                                 $counter1 = count(array_filter($arr));
                                                 $action = Yii::app()->controller->getAction()->getId();
                                                 $segments = explode('/',Yii::app()->request->urlReferrer);
//                                                 if (end($segments) == 'search')
//                                                     {
//                                                     $this->redirect(Yii::app()->request->urlReferrer);
//                                                      Yii::app()->end();
//                                                      }
                                                      if($counter1 < 16){
                                                               $this->redirect(array('users/firstprofile','id'=>$record->id));
                                                            }
                                               } else {
                                                           
                                                            $this->redirect(Yii::app()->request->urlReferrer);
                                                             Yii::app()->end();
                                                            
                                                }*/
                                                
                        }
                }
            }   
			return parent::beforeAction($action);
		
	}
        
        
       
}